[1/13] Linking C static library esp-idf/mqtt/libmqtt.a
[2/13] Linking C static library esp-idf/spiffs/libspiffs.a
[3/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink-iled.c.obj
[5/13] Performing build step for 'bootloader'
[1/1] cd /Users/Gabe/repo/esp/blink-iled/build/bootloader/esp-idf/esptool_py && /Users/Gabe/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/Gabe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/Gabe/repo/esp/blink-iled/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[6/13] No install step for 'bootloader'
[7/13] Linking C static library esp-idf/main/libmain.a
[8/13] Completed 'bootloader'
[9/13] Generating ld/sections.ld
[10/13] Linking CXX executable blink-iled.elf
[11/13] Generating binary image from built executable
esptool.py vv4.8.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/Gabe/repo/esp/blink-iled/build/blink-iled.bin
[12/13] cd /Users/Gabe/repo/esp/blink-iled/build/esp-idf/esptool_py && /Users/Gabe/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/Gabe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/Gabe/repo/esp/blink-iled/build/partition_table/partition-table.bin /Users/Gabe/repo/esp/blink-iled/build/blink-iled.bin
blink-iled.bin binary size 0x2d460 bytes. Smallest app partition is 0x100000 bytes. 0xd2ba0 bytes (82%) free.
[12/13] cd /Users/Gabe/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.1/bin/cmake -D IDF_PATH=/Users/Gabe/esp/esp-idf -D "SERIAL_TOOL=/Users/Gabe/.espressif/python_env/idf5.3_py3.11_env/bin/python;;/Users/Gabe/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/Gabe/repo/esp/blink-iled/build -P /Users/Gabe/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/tty.usbserial-0161469F -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 blink-iled.bin 0x8000 partition_table/partition-table.bin
esptool.py vv4.8.dev1
Serial port /dev/tty.usbserial-0161469F
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, Coding Scheme None
Crystal is 40MHz
MAC: 30:ae:a4:26:fc:90
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26736 bytes to 16374...
Writing at 0x00001000... (100 %)
Wrote 26736 bytes (16374 compressed) at 0x00001000 in 0.8 seconds (effective 282.9 kbit/s)...
Hash of data verified.
Compressed 185440 bytes to 98510...
Writing at 0x00010000... (14 %)
Writing at 0x0001c9ae... (28 %)
Writing at 0x000223a3... (42 %)
Writing at 0x00028105... (57 %)
Writing at 0x0002f900... (71 %)
Writing at 0x00036c4b... (85 %)
Writing at 0x0003d364... (100 %)
Wrote 185440 bytes (98510 compressed) at 0x00010000 in 2.9 seconds (effective 517.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 394.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
